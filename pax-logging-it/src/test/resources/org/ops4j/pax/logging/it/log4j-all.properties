#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# this file keeps all the properties for different Log4J1 integration tests
# just use proper prefix and refer to it in given test

# test for plain FileAppender

builtin.file.log4j.appender.file = org.apache.log4j.FileAppender
builtin.file.log4j.appender.file.append = false
builtin.file.log4j.appender.file.file = target/logs-log4j1/file-appender.log
builtin.file.log4j.appender.file.layout = org.apache.log4j.PatternLayout
builtin.file.log4j.appender.file.layout.ConversionPattern = %c/%C [%p] %m%n

builtin.file.log4j.rootLogger = INFO, file

# test for pax-logging-service specific DailyZipRollingFileAppender

builtin.dailyZip.log4j.appender.console = org.apache.log4j.ConsoleAppender
builtin.dailyZip.log4j.appender.console.layout = org.apache.log4j.TTCCLayout

builtin.dailyZip.log4j.appender.dz = org.apache.log4j.DailyZipRollingFileAppender
builtin.dailyZip.log4j.appender.dz.append = false
builtin.dailyZip.log4j.appender.dz.file = target/logs-log4j1/dz-appender.log
builtin.dailyZip.log4j.appender.dz.filter.ts = osgi:timestampReplacer
builtin.dailyZip.log4j.appender.dz.datePattern = '.'yyyy-MM-dd
builtin.dailyZip.log4j.appender.dz.layout = org.apache.log4j.PatternLayout
builtin.dailyZip.log4j.appender.dz.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c/%C [%p] %m%n

builtin.dailyZip.log4j.rootLogger = INFO, console

builtin.dailyZip.log4j.logger.my.logger = INFO, dz
builtin.dailyZip.log4j.additivity.my.logger = false

# test for SocketAppender

builtin.socket.log4j.appender.console = org.apache.log4j.ConsoleAppender
builtin.socket.log4j.appender.console.layout = org.apache.log4j.TTCCLayout

builtin.socket.log4j.appender.s = org.apache.log4j.net.SocketAppender
builtin.socket.log4j.appender.s.port = <will be set by test itself>
builtin.socket.log4j.appender.s.remoteHost = localhost
builtin.socket.log4j.appender.s.layout = org.apache.log4j.PatternLayout
builtin.socket.log4j.appender.s.layout.ConversionPattern = %c/%C [%p] %m%n

builtin.socket.log4j.rootLogger = INFO, console

builtin.socket.log4j.logger.my.logger = INFO, s
builtin.socket.log4j.additivity.my.logger = false

# test for ListModelAppender

builtin.list.log4j.appender.console = org.apache.log4j.ConsoleAppender
builtin.list.log4j.appender.console.layout = org.apache.log4j.TTCCLayout

builtin.list.log4j.appender.lm = org.apache.log4j.receivers.varia.ListModelAppender
builtin.list.log4j.appender.lm.port = <will be set by test itself>
builtin.list.log4j.appender.lm.remoteHost = localhost
builtin.list.log4j.appender.lm.layout = org.apache.log4j.PatternLayout
builtin.list.log4j.appender.lm.layout.ConversionPattern = %c/%C [%p] %m%n

builtin.list.log4j.rootLogger = INFO, console

builtin.list.log4j.logger.my.logger = INFO, lm
builtin.list.log4j.additivity.my.logger = false

# test for custom, OSGi registered PaxAppender

custom.log4j.appender.console = org.apache.log4j.ConsoleAppender
custom.log4j.appender.console.layout = org.apache.log4j.TTCCLayout

custom.log4j.rootLogger = INFO, console

custom.log4j.logger.my.logger = INFO, osgi:custom
custom.log4j.additivity.my.logger = false

# test for custom, OSGi registered PaxLayout

custom.layout.log4j.appender.console = org.apache.log4j.ConsoleAppender
custom.layout.log4j.appender.console.layout = osgi:custom

custom.layout.log4j.rootLogger = INFO, console

# test for custom, OSGi registered PaxLayout which is not available

custom.fallback.layout.log4j.appender.console = org.apache.log4j.ConsoleAppender
custom.fallback.layout.log4j.appender.console.layout = osgi:custom
custom.fallback.layout.log4j.appender.console.layout.fallback = org.ops4j.pax.logging.extender.ParameterizedLayout
custom.fallback.layout.log4j.appender.console.layout.fallback.Message = Plain and simple parameter

custom.fallback.layout.log4j.rootLogger = INFO, console

# test for custom, OSGi registered PaxErrorHandler

custom.eh.log4j.appender.console = org.apache.log4j.ConsoleAppender
custom.eh.log4j.appender.console.layout = org.apache.log4j.TTCCLayout

custom.eh.log4j.appender.failing = org.ops4j.pax.logging.extender.FailingAppender
custom.eh.log4j.appender.failing.errorhandler = osgi:custom

custom.eh.log4j.rootLogger = INFO, console

custom.eh.log4j.logger.my.logger = INFO, failing
custom.eh.log4j.additivity.my.logger = false
